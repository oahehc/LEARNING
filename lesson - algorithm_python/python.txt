Liabrary
 http://blog.ez2learn.com/2010/04/24/useful-python-libraries/

Official
	https://www.python.org/

Install
	環境變數加上C:\Python27;C:\Python27\Scripts

extension package
	http://www.lfd.uci.edu/~gohlke/pythonlibs/

IDLE(GUI)
	https://docs.python.org/2/library/idle.html
	
PIP(package manage)
	https://blog.longwin.com.tw/2014/08/python-setup-pip-package-2014/
	pip list # 看目前系統有安裝哪些套件
	pip search mysql # 搜尋相關套件
	pip install package # 安裝套件
	pip uninstall package # 移除套件
	pip show --files package # 秀套件檔案列表
	pip list --outdated # 列出過期套件
	pip install --upgrade package # 升級
	
--------------------------------------------------------------------------
[ERROR MSG]
unexpected indent : 縮排 tab change to space*4
unindent does not match any outer indentation : 縮排 tab change to space*4



--------------------------------------------------------------------------
中文的檔案要加上# encoding: utf-8
code
	print "Welcome to Python!"
	print "Turn", turn + 1 => combine string and number
	print char, => keep next print at same line
comment 
	single #
	multi-line """xxxxxx"""
set variable
	my_variable = 10
power
	2**8
modulo
	%
 
[string related]
use string as an array
	fifth_letter = "MONTY"[4]
	partial_letter = "month"[2:4]
number of string
	len(word)
char.lower()
char.upper()
str()
	set variable to string
concatenation string
	"I " + "love " + "you"
check if string contain character
	original.isalpha()
	
show input text 
	name = raw_input("What is your name?")
	quest = raw_input("What is your quest?")
	year = int(raw_input("What is your age?")) => limit to integer
print input data
	print "name is %s, quest is %s." % (name, quest)

set datetime 
	from datetime import datetime
	now = datetime.now()
	now.year
	now.month
	now.day
	now.hour
	now.minute
	now.second

set function
	def clinic():
		return xxx
	functional programming : ananymous function
		lambda param1, param2, ... : expression
		lambda x: x % 3 == 0
		filter(lambda x: x!="X", garbled) => remove X in string
	filter data by ananymous function
		filter(lambda x: x % 3 == 0, my_list)
set parameter by undefine number
	def biggest_number(*args):
		return max(args)
logicl
	if xxx:
	elif xxx:
	else:
	not > and > or
	True/False

show variable type
	type(variable)
	if type(number) == int	
 
[import function]
	load math function
		import math
		from math import *
	just load selected function	
		from math import sqrt
	square
		math.sqrt()
	show every on this module
		everything = dir(math)

[Math]
	max()
	min()
	abs()
 
	
from random import randint	 
	ramdon number
		coin = randint(0, 1)

[Loop]
	while loop
		while count < 5:
			xxx
			count += 1
		while loop_condition:
			xxx
			loop_condition = False
	for loop
		load index and content together
			for index, item in enumerate(choices):
		combinate 2 or more array in one loop
			for a, b in zip(list_a, list_b):
	break loop at if/while
	use else after while/for loop if 'break' doesn't effect
	
round up by setting digital
	round(x[, n])

change variable type
	int()
	str()

sort array
	sorted(array)

pass
	pass areas of your code where Python expects an expression
	
[Array]
	array = ["a", "b", "c", "d"];
	array = [i for i in xrange(10)] => create array = 0,1,2,...,9
	len(array) = number of content
	array.append("e")
	array_partial = array[1:3] = 1<=index<3
	array_first = array[:3] = 0<=index<3
	array.index("a") = 0
	array.insert(1, "e") = add "e" at index 1
	loop by content
		for item in list:
			print item
	loop by index
		for i in range(len(list)):
			print list[i]
	array.sort()
	array = {'Puffin' : 104, 'Sloth' : 105, 'Burmese Python' : 106}
	array.count(a)  count number of a in array
	remove content
		del array['index']
		array.remove(item)
		n.pop(index)
	for number in range(x,y)
		range(6) # => [0,1,2,3,4,5]
		range(1,6) # => [1,2,3,4,5]
		range(1,6,3) # => [1,4] => range(start, stop, step)
	combine array content by character
		"---".join(letters)
	set array by loop : list comprehension
		evens_to_50 = [i for i in range(51) if i % 2 == 0]
	print partial content of array
		print array[start:end:step]
		print letters[::-1] => list backward
	remove first and last element for array
		newArray = array[1 : -1]
	
[dictionary]
define
	my_dict = {
	   "name":"allen",     
	   "age":32,     
	   "sex":"male",     
	}
print dictionary
	print my_dict.items() => print by array both key and value
		[('age', 32), ('name', 'allen'), ('sex', 'male')]
	print my_dict.keys()
	print my_dict.values()
	
	
[python bitwise operator]
	x << y  # Left Shift
		Returns x with the bits shifted to the left by y places =  x * 2**y.
	x >> y  # Right Shift
		Returns x with the bits shifted to the right by y places = x / 2**y.
	x & y   # Bitwise AND
		Does a "bitwise and". Each bit of the output is 1 if the corresponding bit of x AND of y is 1, otherwise it's 0.
	x | y   # Bitwise OR
		Does a "bitwise or". Each bit of the output is 0 if the corresponding bit of x AND of y is 0, otherwise it's 1.
	~ x     # Bitwise NOT
		Returns the complement of x - the number you get by switching each 1 for a 0 and each 0 for a 1 = -x - 1.
	x ^ y   # Bitwise XOR
		Does a "bitwise exclusive or". Each bit of the output is the same as the corresponding bit in x if that bit in y is 0, 
		and it's the complement of the bit in x if that bit in y is 1.

	print 0b111 = 111(in 2 digital) = 7
	base 2 = bin()
	base 8 = oct()
	base 16 = hex()	 
	int("110", 2) => set int by base 2
	
	
[Object]
class Animal(object):
    """Makes cute animals."""
    is_alive = True
    def __init__(self, name, age):
        self.name = name
        self.age = age
    # Add your method here!
    def description(self):
        print self.name
        print self.age

hippo = Animal("ko",2)
hippo.description()
	
Inheritance from 'Customer'
	class ReturningCustomer(Customer):
	
Use 'super' to call parent class method if already been definate a differant content in sub class
    def full_time_wage(self, hours):
        return super(PartTimeEmployee, self).calculate_wage(hours)
		
method to use property of class
    def display_car(self):
        return "This is a %s %s with %s MPG." % (self.color,self.model,str(self.mpg))

set default parameter for class
    def __init__(self, model='Jaguar', color='Monochrome', mpg='14'):
        self.model = model
        self.color = color
        self.mpg  = mpg
		
change object print format
    def __repr__(self):
        return "(%d,%d,%d)" % (self.x,self.y,self.z)
	
%d will format a number for display.
%s will insert the presentation string representation of the object (i.e. str(o))
%r will insert the canonical string representation of the object (i.e. repr(o))



[file]
open
	f = open("output.txt", "w")
update
	for item in my_list:
		f.write(str(item) + "\n")
close
	f.close()
read
	f.read()
	f.readline() => just one line
auto close file after update data (use 'with' and 'as')	
	with open("text.txt", "w") as textfile:
		textfile.write("Success!")
check file open/close status
	f.closed = True/False

	
[chang timeout setting]
	import codeskulptor
	codeskulptor.set_timeout(20)
	
	
[plot]
import matplotlib.pyplot as plt
http://matplotlib.org/users/text_intro.html
	xvals = [0,1,2,3,4,5]
    yvals = [0,2,4,6,8,10]    
    fig = plt.figure()
    ax = fig.add_subplot(111)  #http://stackoverflow.com/questions/3584805/in-matplotlib-what-does-the-argument-mean-in-fig-add-subplot111
    ax.set_title('resilience for all three graphs')
    ax.set_xlabel('attack node')
    ax.set_ylabel('resilience')    
    ax.plot(xvals,yvals, '-b', label='computer network')
    ax.legend(loc='upper right')    
    plt.show()
	
	
[record running time]
import time, itertoolsi)
	tStart = time.time()
	run program...
	tStop = time.time()
	print (tStop - tStart)


------------------------------------------------------------------------------------------
[To Be Check]
self._node_numbers = [node for node in range(num_nodes) for dummy_idx in range(num_nodes)]
	
	
	
	
	