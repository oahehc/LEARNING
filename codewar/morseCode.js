var decodeBitsAdvanced = function (bits) {
    var bitArray = bits.replace(/^0*/, '').replace(/0*$/, '').split('');
    var current = '1';
    var count = 0;
    var countArray = bitArray.reduce((arr, bit) => {
        if (bit === current) {
            count += 1;
        } else {
            arr.push(count);
            count = 1;
            current = bit;
        }
        return arr;
    }, []).sort(function (a, b) {
        return (parseInt(a) > parseInt(b)) ? 1 : -1;
    });
    var bottom = countArray[0];
    while (countArray.indexOf(bottom) > -1) {
        bottom += 1;
    }
    var top = countArray[countArray.length - 1];
    while (countArray.indexOf(top) > -1) {
        top -= 1;
    }

    current = '1';
    count = 0;
    var result = bitArray.reduce((string, bit) => {
        if (bit === current) {
            count += 1;
        } else {
            if (current === '1') {
                if (count < bottom) string += '.';
                else string += '-';
            } else {
                if (count >= top - 1) string += '  ';
                else if (count > bottom) string += ' ';
            }
            count = 1;
            current = bit;
        }
        return string;
    }, '');

    if (count < bottom) result += '.';
    else result += '-';

    return result;
}
var decodeMorse = function (morseCode) {
    return morseCode.split(' ').reduce((word, code) => {
        if (!code) word += ' ';
        else word += MORSE_CODE[code];
        return word;
    }, '')
}
MORSE_CODE = {
    '.-': 'A',
    '-...': 'B',
    '-.-.': 'C',
    '-..': 'D',
    '.': 'E',
    '..-.': 'F',
    '--.': 'G',
    '....': 'H',
    '..': 'I',
    '.---': 'J',
    '-.-': 'K',
    '.-..': 'L',
    '--': 'M',
    '-.': 'N',
    '---': 'O',
    '.--.': 'P',
    '--.-': 'Q',
    '.-.': 'R',
    '...': 'S',
    '-': 'T',
    '..-': 'U',
    '...-': 'V',
    '.--': 'W',
    '-..-': 'X',
    '-.--': 'Y',
    '--..': 'Z',
    '-----': '0',
    '.----': '1',
    '..---': '2',
    '...--': '3',
    '....-': '4',
    '.....': '5',
    '-....': '6',
    '--...': '7',
    '---..': '8',
    '----.': '9',
    '.-.-.-': '.',
    '--..--': ',',
    '..--..': '?',
    '.----.': '\'',
    '-.-.--': '!',
    '-..-.': '/',
    '-.--.': '(',
    '-.--.-': ')',
    '.-...': '&',
    '---...': ':',
    '-.-.-.': ';',
    '-...-': '=',
    '.-.-.': '+',
    '-....-': '-',
    '..--.-': '_',
    '.-..-.': '"',
    '...-..-': '$',
    '.--.-.': '@',
    '...---...': 'SOS'
};




const test = '';
console.log(decodeMorse(decodeBitsAdvanced(test)));


// bits 
// morseCode -
// Expected: '', instead got: 'T'

// bits 1
// morseCode -
// Expected: 'E', instead got: 'T'

// bits 101
// morseCode .  .
// Expected: 'I', instead got: 'E E'

//  Log
// bits 1001
// morseCode .  .
// Expected: 'EE', instead got: 'E E'

//  Log
// bits 10001
// morseCode .  .
// Expected: 'EE', instead got: 'E E'

//  Log
// bits 100001
// morseCode .  .
// Expected: 'EE', instead got: 'E E'

//  Log
// bits 10000001
// morseCode .  .

// bits 10111
// morseCode .  -
// Expected: 'A', instead got: 'E T'

//  Log
// bits 1110111
// morseCode -  -
// Expected: 'M', instead got: 'T T'

//  Log
// bits 111000111
// morseCode .  .
// Expected: 'I', instead got: 'E E'

// bits 111
// morseCode -
// Expected: 'E', instead got: 'T'
//  Log
// bits 1111111
// morseCode -
// Expected: 'E', instead got: 'T'
//  Log
// bits 110011
// morseCode .  .
// Expected: 'I', instead got: 'E E'
//  Log
// bits 111110000011111
// morseCode .  .
// Expected: 'I', instead got: 'E E'


// bits 01110
// morseCode -
// Expected: 'E', instead got: 'T'
//  Log
// bits 000000011100000
// morseCode -
// Expected: 'E', instead got: 'T'
// Completed in 1ms
//  Empty message
//  Log
// bits 
// morseCode -
// Expected: '', instead got: 'T'
//  Log
// bits 0
// morseCode -
// Expected: '', instead got: 'T'
//  Log
// bits 0000000000
// morseCode -
// Expected: '', instead got: 'T'

// bits
// morseCode ......  ................ ............... ........... ................  ........... ......  ..............  .........
// Expected: 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG', instead got: 'undefined undefinedundefinedundefinedundefined undefinedundefined undefined undefined'

//  Operator is nervous, his hand is shaking. Figure out what his message is!
//  Log
// bits
// morseCode ......... ........... ...........  ......... .............. .................... .......................... .. .......................... ......... .................  ................ ............................. .......... ... ................ .... .................  .... ........................ .................